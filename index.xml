<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Kilien's Blog</title><link>http://KiLien.github.io/</link><description>Kilien's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ki.lien@foxmail.com (Kilien)</managingEditor><webMaster>ki.lien@foxmail.com (Kilien)</webMaster><lastBuildDate>Fri, 02 Apr 2021 23:06:22 +0800</lastBuildDate><atom:link href="http://KiLien.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>PicGo+GitHub：打造你自己的图床</title><link>http://KiLien.github.io/github%E5%9B%BE%E5%BA%8A/</link><pubDate>Fri, 02 Apr 2021 23:06:22 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/github%E5%9B%BE%E5%BA%8A/</guid><description>PicGo 介绍 这是一款图片上传的工具，目前支持 SM.MS 图床，微博图床，七牛图床，腾讯云 COS，阿里云 OSS，Imgur，又拍云，GitHub等图床，未来将</description></item><item><title>LeetCode-160-相交链表</title><link>http://KiLien.github.io/LeetCode-160%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</link><pubDate>Tue, 10 Nov 2020 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/LeetCode-160%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</guid><description>LeetCode-160相交链表 编写一个程序，找到两个单链表相交的起始节点。 如下面的两个链表**：** 相交链表" 相交链表 在节点 c1 开始相交。 示</description></item><item><title>LeetCode-821-字符的最短距离</title><link>http://KiLien.github.io/LeetCode-821-%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB/</link><pubDate>Mon, 02 Nov 2020 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/LeetCode-821-%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB/</guid><description>LeetCode-821-字符的最短距离 题目 给定一个字符串 S 和一个字符 C。返回一个代表字符串 S 中每个字符到字符串 S 中的字符 C 的最短距离的数组</description></item><item><title>LeetCode-66-加一</title><link>http://KiLien.github.io/LeetCode-66-%E5%8A%A0%E4%B8%80/</link><pubDate>Sun, 01 Nov 2020 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/LeetCode-66-%E5%8A%A0%E4%B8%80/</guid><description>LeetCode-66 加一 题目 给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。 你可以</description></item><item><title>Python技巧</title><link>http://KiLien.github.io/PythonTrick/</link><pubDate>Fri, 09 Oct 2020 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/PythonTrick/</guid><description><![CDATA[Python技巧 原地交换两数 1 2 3 4 5 a = 10 b = 20 a, b = b, a print(b, a) print(a, b) 输出: 1 2 10 20 20 10 链式比较 1 2 3 n = 10 print(6 &lt; n &lt; 20) print(11 &lt; n &lt; 20) 输出: 1 2 True False]]></description></item><item><title>生成器的运用</title><link>http://KiLien.github.io/GeneratorAndYield/</link><pubDate>Thu, 25 Jun 2020 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/GeneratorAndYield/</guid><description>python 生成器和迭代器 PS：这篇博客是我上网课做的笔记，也是参考网课老师的博客，就是学习笔记而已，不喜勿喷！ 本节主要记录一下列表生成式，生成器和迭</description></item><item><title>单例模式实现</title><link>http://KiLien.github.io/singleton/</link><pubDate>Mon, 25 May 2020 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/singleton/</guid><description>Python单例模式(Singleton)的N种实现 很多初学者喜欢用 全局变量 ，因为这比函数的参数传来传去更容易让人理解。确实在很多场景下用全</description></item><item><title>LeetCode-24-两两交换链表中的节点</title><link>http://KiLien.github.io/SwapNodesinPairs/</link><pubDate>Wed, 29 May 2019 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/SwapNodesinPairs/</guid><description><![CDATA[Swap Nodes in Pairs Leetcode 24.Swap Nodes in Pairs Given alinked list, swap every two adjacent nodes and return its head. You maynotmodify the values in the list’s nodes, only nodes itself may be changed. Example: Given 1-&gt;2-&gt;3-&gt;4, you should return the list as 2-&gt;1-&gt;4-&gt;3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #Author:kilien]]></description></item><item><title>LeetCode-141-环形链表</title><link>http://KiLien.github.io/LinkedListCycle/</link><pubDate>Mon, 27 May 2019 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/LinkedListCycle/</guid><description>Linked List Cycle Leetcode 141.Linked List Cycle Given a linked list, determine if it has a cycle in it. To represent a cycle in the given linked list, we use an integerposwhich represents the position (0-indexed)in the linked list where tail connects to. Ifposis-1, then there is no cycle in the linked list. Example : Input: head = [3,2,0,-4], pos = 1 Output: true Explanation: There is a cycle in</description></item><item><title>LeetCode-148-排序链表</title><link>http://KiLien.github.io/SortList/</link><pubDate>Mon, 27 May 2019 11:06:17 +0800</pubDate><author>作者</author><guid>http://KiLien.github.io/SortList/</guid><description><![CDATA[Sort List LeetCode 148.Sort List Sort a linked list inO(nlogn) time using constant space complexity. Example 1: Input: 4-&gt;2-&gt;1-&gt;3 Output: 1-&gt;2-&gt;3-&gt;4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # Author：kilien # 思路]]></description></item></channel></rss>